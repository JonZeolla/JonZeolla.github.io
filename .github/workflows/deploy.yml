---
name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

defaults:
  run:
    shell: 'bash --noprofile --norc -Eeuo pipefail {0}'

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Needed to generate last modified dates
          fetch-depth: 0
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python
        run: uv python install
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install Task
        uses: arduino/setup-task@v2
      - name: Initialize the repository
        run: task -v init
      - name: Generate the HTML
        run: task -v build
      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::728412089767:role/jonzeolla.com_lab_testing
          aws-region: us-east-1
      - name: Run the tests
        run: task -v test
      - name: Cleanup from testing (just in case)
        run: task -v destroy
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'
      - name: Minimize uv cache
        run: uv cache prune --ci
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
